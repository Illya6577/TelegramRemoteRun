import telebot
import subprocess
import sys
import re

# –í—Å—Ç–∞–≤—Ç–µ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = "token"
bot = telebot.TeleBot(TOKEN)

# –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Å–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ –º–æ–∂—É—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è –±–æ—Ç–æ–º
ALLOWED_USERS = [list of ids]  # –í—Å—Ç–∞–≤—Ç–µ —Å–≤–æ—ó ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤


def is_user_allowed(user_id):
    return user_id in ALLOWED_USERS


def log_to_console(user_id, command, output):
    """–õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥ —ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ —É –∫–æ–Ω—Å–æ–ª—å."""
    print(f"\n[USER {user_id}] –Ω–∞–ø–∏—Å–∞–≤: {command}")
    print(f"[CONSOLE OUTPUT]:\n{output}\n")


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    """–ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è —Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –±–æ—Ç–∞."""
    bot.reply_to(
        message,
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤—ñ–¥–¥–∞–ª–µ–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ —É Windows —á–µ—Ä–µ–∑ cmd.exe. "
        "–ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É, —ñ —è —ó—ó –≤–∏–∫–æ–Ω–∞—é.\n"
        "–î–æ—Å—Ç—É–ø–Ω—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
        "- /suicide: –∑—É–ø–∏–Ω—è—î —Ä–æ–±–æ—Ç—É –±–æ—Ç–∞\n"
        "–©–æ–± –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —è–∫—É—Å—å –∫–æ–º–∞–Ω–¥—É, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à—ñ—Ç—å –º–µ–Ω—ñ. –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É, —Å–ø—Ä–æ–±—É–π—Ç–µ: whoami"
    )


@bot.message_handler(func=lambda m: not m.text.startswith('/'))
def execute_plain_command(message):
    """–í–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —è–∫ –∫–æ–º–∞–Ω–¥–∏."""
    user_id = message.from_user.id
    if not is_user_allowed(user_id):
        bot.reply_to(message, "–í–∞–º –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞.")
        return

    command = message.text.strip()
    try:
        result = subprocess.run(
            ["cmd.exe", "/c", command],
            text=True,
            capture_output=True,
            timeout=10
        )
        output = result.stdout or result.stderr
        bot.reply_to(message, f"–†–µ–∑—É–ª—å—Ç–∞—Ç:\n{output}")
        log_to_console(user_id, command, output)  # –õ–æ–≥ —É –∫–æ–Ω—Å–æ–ª—å
    except subprocess.TimeoutExpired:
        bot.reply_to(message, "–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ.")
        log_to_console(user_id, command, "–ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏ –ø–µ—Ä–µ–≤–∏—â–µ–Ω–æ.")  # –õ–æ–≥ —É –∫–æ–Ω—Å–æ–ª—å
    except Exception as e:
        bot.reply_to(message, f"–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏: {e}")
        log_to_console(user_id, command, f"–ü–æ–º–∏–ª–∫–∞: {e}")  # –õ–æ–≥ —É –∫–æ–Ω—Å–æ–ª—å

@bot.message_handler(commands=['suicide'])
def shutdown_bot(message):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –±–æ—Ç–∞."""
    user_id = message.from_user.id
    if not is_user_allowed(user_id):
        bot.reply_to(message, "–í–∞–º –Ω–µ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –∑—É–ø–∏–Ω—è—Ç–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞.")
        return

    bot.reply_to(message, "–ë–æ—Ç –∑—É–ø–∏–Ω—è—î—Ç—å—Å—è... –ü—Ä–æ—â–∞–≤–∞–π—Ç–µ! üëã")
    print(f"[USER {user_id}] –í–∏–∫–ª–∏–∫–∞–≤ –∫–æ–º–∞–Ω–¥—É /suicide. –ë–æ—Ç –∑—É–ø–∏–Ω—è—î—Ç—å—Å—è.")
    bot.stop_polling()  # –ó—É–ø–∏–Ω—è—î –ø—Ä–∏–π–æ–º –Ω–æ–≤–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
    sys.exit(0)  # –ó–∞–≤–µ—Ä—à—É—î –ø—Ä–æ–≥—Ä–∞–º—É


@bot.message_handler(func=lambda m: True)
def default_response(message):
    """–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –Ω–µ–≤—ñ–¥–æ–º—ñ –∫–æ–º–∞–Ω–¥–∏."""
    bot.reply_to(message, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–æ–∑–ø—ñ–∑–Ω–∞–Ω–∞. –í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –±–µ–∑ '/' –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥.")


if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ...")
    bot.infinity_polling()